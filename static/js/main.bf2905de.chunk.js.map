{"version":3,"sources":["index.js"],"names":["fast","tension","friction","slow","mass","trans","x","y","Goo","useTrail","xy","config","i","trail","set","style","position","width","height","id","in","result","stdDeviation","values","className","onMouseMove","e","clientX","clientY","map","props","index","div","transform","interpolate","render","document","getElementById"],"mappings":"yMAKMA,G,MAAO,CAAEC,QAAS,IAAMC,SAAU,KAClCC,EAAO,CAAEC,KAAM,EAAGH,QAAS,IAAKC,SAAU,IAC1CG,EAAQ,SAACC,EAAGC,GAAJ,4BAAyBD,EAAzB,cAAgCC,EAAhC,mCAEC,SAASC,IAAO,IAAD,EACPC,YAAS,GAAG,iBAAO,CACtCC,GAAI,CAAC,EAAG,GACRC,OAAQ,SAAAC,GAAC,OAAW,IAANA,EAAUZ,EAAOG,OAHL,mBACrBU,EADqB,KACdC,EADc,KAM5B,OACE,qCACE,qBAAKC,MAAO,CAAEC,SAAU,WAAYC,MAAO,EAAGC,OAAQ,GAAtD,SACE,yBAAQC,GAAG,MAAX,UACE,gCAAgBC,GAAG,gBAAgBC,OAAO,OAAOC,aAAa,OAC9D,+BACEF,GAAG,OACHG,OAAO,mDAIb,qBACEC,UAAU,aACVC,YAAa,SAAAC,GAAC,OAAIZ,EAAI,CAAEJ,GAAI,CAACgB,EAAEC,QAASD,EAAEE,YAF5C,SAIGf,EAAMgB,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,IAASC,IAAV,CAEEjB,MAAO,CAAEkB,UAAWH,EAAMpB,GAAGwB,YAAY7B,KADpC0B,WASjBI,iBAAO,cAAC3B,EAAD,IAAS4B,SAASC,eAAe,W","file":"static/js/main.bf2905de.chunk.js","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { useTrail, animated } from 'react-spring';\nimport './styles.css';\n\nconst fast = { tension: 1000, friction: 40 };\nconst slow = { mass: 1, tension: 300, friction: 50 };\nconst trans = (x, y) => `translate3d(${x}px,${y}px,0) translate3d(-50%,-50%,0)`;\n\nexport default function Goo() {\n  const [trail, set] = useTrail(3, () => ({\n    xy: [0, 0],\n    config: i => (i === 0 ? fast : slow),\n  }));\n\n  return (\n    <>\n      <svg style={{ position: 'absolute', width: 0, height: 0 }}>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"30\" />\n          <feColorMatrix\n            in=\"blur\"\n            values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7\"\n          />\n        </filter>\n      </svg>\n      <div\n        className=\"hooks-main\"\n        onMouseMove={e => set({ xy: [e.clientX, e.clientY] })}\n      >\n        {trail.map((props, index) => (\n          <animated.div\n            key={index}\n            style={{ transform: props.xy.interpolate(trans) }}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nrender(<Goo />, document.getElementById('root'));\n"],"sourceRoot":""}